{% if helpers.exists('PFWsense.radsecproxy.general') and PFWsense.radsecproxy.general.enabled|default("0") == "1" %}
{% set certDir = '/usr/local/etc/radsecproxy.d/certs/' %}
# auto-generated config-file for radsecproxy
###########################################
# GENERAL
###########################################

#PidFile /var/run/radsecproxy.pid
#LogDestination file:///var/log/radsecproxy.log
LogDestination x-syslog:///LOG_DAEMON

{% if PFWsense.radsecproxy.general.logLevel is defined and PFWsense.radsecproxy.general.logLevel != "" %}
LogLevel {{ PFWsense.radsecproxy.general.logLevel }}
{% endif %}
{% if PFWsense.radsecproxy.general.logFullUsername is defined and PFWsense.radsecproxy.general.logFullUsername != "" %}
LogFullUsername {{ PFWsense.radsecproxy.general.logFullUsername }}
{% endif %}
{% if PFWsense.radsecproxy.general.logMac is defined and PFWsense.radsecproxy.general.logMac != "" %}
LogMac {{ PFWsense.radsecproxy.general.logMac }}
{% endif %}
{% if PFWsense.radsecproxy.general.loopPrevention is defined and PFWsense.radsecproxy.general.loopPrevention != "" %}
LoopPrevention {{ PFWsense.radsecproxy.general.loopPrevention }}
{% endif %}
{% if PFWsense.radsecproxy.general.listenUdp is defined and PFWsense.radsecproxy.general.listenUdp != "" %}
ListenUDP {{ PFWsense.radsecproxy.general.listenUdp }}
{% endif %}
{% if PFWsense.radsecproxy.general.listenTcp is defined and PFWsense.radsecproxy.general.listenTcp != "" %}
ListenTCP {{ PFWsense.radsecproxy.general.listenTcp }}
{% endif %}
{% if PFWsense.radsecproxy.general.listenTls is defined and PFWsense.radsecproxy.general.listenTls != "" %}
ListenTLS {{ PFWsense.radsecproxy.general.listenTls }}
{% endif %}
{% if PFWsense.radsecproxy.general.listenDtls is defined and PFWsense.radsecproxy.general.listenDtls != "" %}
ListenDTLS {{ PFWsense.radsecproxy.general.listenDtls }}
{% endif %}
{% if PFWsense.radsecproxy.general.sourceUdp is defined and PFWsense.radsecproxy.general.sourceUdp != "" %}
SourceUDP {{ PFWsense.radsecproxy.general.sourceUdp }}
{% endif %}
{% if PFWsense.radsecproxy.general.sourceTcp is defined and PFWsense.radsecproxy.general.sourceTcp != "" %}
SourceTCP {{ PFWsense.radsecproxy.general.sourceTcp }}
{% endif %}
{% if PFWsense.radsecproxy.general.sourceTls is defined and PFWsense.radsecproxy.general.sourceTls != "" %}
SourceTLS {{ PFWsense.radsecproxy.general.sourceTls }}
{% endif %}
{% if PFWsense.radsecproxy.general.sourceDtls is defined and PFWsense.radsecproxy.general.sourceDtls != "" %}
SourceDTLS {{ PFWsense.radsecproxy.general.sourceDtls }}
{% endif %}

###########################################
# TLS-CONFIGS
###########################################

{% for tlsConfig in helpers.toList('PFWsense.radsecproxy.tlsConfigs.tlsConfig') %}
# config for TLS-Config "{{ tlsConfig.description }}"
tls {{ tlsConfig.name }} {
{% if tlsConfig.caCertificateRefId is defined and tlsConfig.caCertificateRefId != "" %}
  CACertificateFile   {{ certDir}}{{ tlsConfig.name }}_ca-cert.pem
{% endif %}
{% if tlsConfig.proxyCertificateRefId is defined and tlsConfig.proxyCertificateRefId != "" %}
  CertificateFile     {{ certDir}}{{ tlsConfig.name }}_proxy-cert.pem
  CertificateKeyFile  {{ certDir}}{{ tlsConfig.name }}_proxy-key.pem
{% endif %}
{% if tlsConfig.policyOids is defined and tlsConfig.policyOids != "" %}
{% for policyOid in tlsConfig.policyOids.split(',') %}
  PolicyOID {{ policyOid }}
{% endfor %}
{% endif %}
  CRLCheck {{ tlsConfig.crlCheck }}
{% if tlsConfig.cacheExpiry is defined and tlsConfig.cacheExpiry != "" %}
  CacheExpiry {{ tlsConfig.cacheExpiry }}
{% endif %}
}

{% endfor %}

###########################################
# REWRITE-RULES
###########################################

{% for rewriteRule in helpers.toList('PFWsense.radsecproxy.rewrites.rewrite') %}
{% if rewriteRule.enabled is defined and rewriteRule.enabled == "1" %}

rewrite {{ rewriteRule.name }} {
{% if rewriteRule.addAttributes is defined and rewriteRule.addAttributes != "" %}
{% for addAttribute in rewriteRule.addAttributes.split("\n") %}
  AddAttribute {{ addAttribute }}
{% endfor %}
{% endif %}
{% if rewriteRule.addVendorAttributes is defined and rewriteRule.addVendorAttributes != "" %}
{% for addVendorAttribute in rewriteRule.addVendorAttributes.split("\n") %}
  AddVendorAttribute {{ addVendorAttribute }}
{% endfor %}
{% endif %}
{% if rewriteRule.supplementAttributes is defined and rewriteRule.supplementAttributes != "" %}
{% for supplementAttribute in rewriteRule.supplementAttributes.split("\n") %}
  SupplementAttribute {{ supplementAttribute }}
{% endfor %}
{% endif %}
{% if rewriteRule.supplementVendorAttributes is defined and rewriteRule.supplementVendorAttributes != "" %}
{% for supplementVendorAttribute in rewriteRule.supplementVendorAttributes.split("\n") %}
  SupplementVendorAttribute {{ supplementVendorAttribute }}
{% endfor %}
{% endif %}
{% if rewriteRule.modifyAttributes is defined and rewriteRule.modifyAttributes != "" %}
{% for modifyAttribute in rewriteRule.modifyAttributes.split("\n") %}
  ModifyAttribute {{ modifyAttribute }}
{% endfor %}
{% endif %}
{% if rewriteRule.modifyVendorAttributes is defined and rewriteRule.modifyVendorAttributes != "" %}
{% for modifyVendorAttribute in rewriteRule.modifyVendorAttributes.split("\n") %}
  ModifyVendorAttribute {{ modifyVendorAttribute }}
{% endfor %}
{% endif %}
{% if rewriteRule.removeAttributes is defined and rewriteRule.removeAttributes != "" %}
{% for removeAttribute in rewriteRule.removeAttributes.split("\n") %}
  RemoveAttribute {{ removeAttribute }}
{% endfor %}
{% endif %}
{% if rewriteRule.removeVendorAttributes is defined and rewriteRule.removeVendorAttributes != "" %}
{% for removeVendorAttribute in rewriteRule.removeVendorAttributes.split("\n") %}
  RemoveVendorAttribute {{ removeVendorAttribute }}
{% endfor %}
{% endif %}
  WhitelistMode {{ rewriteRule.whitelistMode }}
{% if rewriteRule.whitelistAttributes is defined and rewriteRule.whitelistAttributes != "" %}
{% for whitelistAttribute in rewriteRule.whitelistAttributes.split("\n") %}
  WhitelistAttribute {{ whitelistAttribute }}
{% endfor %}
{% endif %}
{% if rewriteRule.whitelistVendorAttributes is defined and rewriteRule.whitelistVendorAttributes != "" %}
{% for whitelistVendorAttribute in rewriteRule.whitelistVendorAttributes.split("\n") %}
  WhitelistVendorAttribute {{ whitelistVendorAttribute }}
{% endfor %}
{% endif %}
}
{% endif %}
{% endfor %}

###########################################
# CLIENTS
###########################################

{% for client in helpers.toList('PFWsense.radsecproxy.clients.client') %}
{% if client.enabled is defined and client.enabled == "1" %}
# config for client "{{ client.description }}"
client {{ client.identifier }} {
  Host {{ client.host }}
  Type {{ client.type }}
{% if client.secret is defined and client.secret != "" %}
  Secret {{ client.secret }}
{% endif %}
{% if client.tlsConfig is defined and client.tlsConfig != "" %}
{% set tlsConfig = helpers.getUUID(client.tlsConfig) %}
  Tls {{ tlsConfig.name }}
{% endif %}
  CertificateNameCheck {{ client.certificateNameCheck }}
{% if client.matchCertificateAttribute is defined and client.matchCertificateAttribute != "" %}
  matchCertificateAttribute {{ client.matchCertificateAttribute }}
{% endif %}
{% if client.rewriteIn is defined and client.rewriteIn != "" %}
{% set rewriteInRule = helpers.getUUID(client.rewriteIn) %}
  RewriteIn {{ rewriteInRule.name }}
{% endif %}
{% if client.rewriteOut is defined and client.rewriteOut != "" %}
{% set rewriteOutRule = helpers.getUUID(client.rewriteOut) %}
  RewriteOut {{ rewriteOutRule.name }}
{% endif %}
}

{% else %}
# config for client "{{ client.description }}" not enabled, skipping!"

{% endif %}
{% endfor %}

###########################################
# SERVERS
###########################################

{% for server in helpers.toList('PFWsense.radsecproxy.servers.server') %}
# config for server "{{ server.description }}"
server {{ server.identifier }} {
  Host {{ server.host }}
{% if server.port is defined and server.port != "" %}
  Port {{ server.port }}
{% endif %}
  Type {{ server.type }}
{% if server.secret is defined and server.secret != "" %}
  Secret {{ server.secret }}
{% endif %}
{% if server.tlsConfig is defined and server.tlsConfig != "" %}
{% set tlsConfig = helpers.getUUID(server.tlsConfig) %}
  Tls {{ tlsConfig.name }}
{% endif %}
  StatusServer {{ server.statusServer }}
  CertificateNameCheck {{ server.certificateNameCheck }}
{% if server.matchCertificateAttribute is defined and server.matchCertificateAttribute != "" %}
  matchCertificateAttribute {{ server.matchCertificateAttribute }}
{% endif %}
{% if server.rewriteIn is defined and server.rewriteIn != "" %}
{% set rewriteInRule = helpers.getUUID(server.rewriteIn) %}
  RewriteIn {{ rewriteInRule.name }}
{% endif %}
{% if server.rewriteOut is defined and server.rewriteOut != "" %}
{% set rewriteOutRule = helpers.getUUID(server.rewriteOut) %}
  RewriteOut {{ rewriteOutRule.name }}
{% endif %}
}

{% endfor %}

###########################################
# REALMS
###########################################

{% for realm in helpers.toList('PFWsense.radsecproxy.realms.realm') %}
{% if realm.enabled is defined and realm.enabled == "1" %}
# config for realm "{{ realm.realm }}"
realm {{ realm.realm }} {
{% if realm.server is defined and realm.server != "" %}
{% for serverUuid in realm.server.split(',') %}
{% set server = helpers.getUUID(serverUuid) %}
  Server {{ server.identifier }}
{% endfor %}
{% endif %}
{% if realm.replyMessage is defined and realm.replyMessage != "" %}
  ReplyMessage "{{ realm.replyMessage }}"
{% endif %}
{% if realm.accountingResponse is defined and realm.accountingResponse != "" %}
  AccountingResponse {{ realm.accountingResponse }}
{% endif %}
}

{% else %}
# config for realm "{{ realm.realm }}" not enabled, skipping!"

{% endif %}
{% endfor %}
{# END OF TEMPLATE #}
{% endif %}
