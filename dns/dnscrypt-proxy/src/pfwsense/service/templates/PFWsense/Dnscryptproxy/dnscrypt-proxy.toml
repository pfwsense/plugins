{% if helpers.exists('PFWsense.dnscryptproxy.general.enabled') and PFWsense.dnscryptproxy.general.enabled == '1' %}

{%   if helpers.exists('PFWsense.dnscryptproxy.general.serverlist') and PFWsense.dnscryptproxy.general.serverlist != '' %}
server_names = [{{ "'" + ("','".join(PFWsense.dnscryptproxy.general.serverlist.split(','))) + "'" }}]
{%   endif %}

{%   if helpers.exists('PFWsense.dnscryptproxy.general.disabled_serverlist') and PFWsense.dnscryptproxy.general.disabled_serverlist != '' %}
disabled_server_names = [{{ "'" + ("','".join(PFWsense.dnscryptproxy.general.disabled_serverlist.split(','))) + "'" }}]
{%   endif %}

{%   if helpers.exists('PFWsense.dnscryptproxy.general.listen_addresses') and PFWsense.dnscryptproxy.general.listen_addresses != '' %}
listen_addresses = [{{ "'" + ("','".join(PFWsense.dnscryptproxy.general.listen_addresses.split(','))) + "'" }}]
{%   else %}
listen_addresses = []
{%   endif %}

max_clients = {{ PFWsense.dnscryptproxy.general.max_clients }}

{%   if helpers.exists('PFWsense.dnscryptproxy.general.ipv4_servers') and PFWsense.dnscryptproxy.general.ipv4_servers == '1' %}
ipv4_servers = true
{%   else %}
ipv4_servers = false
{%   endif %}

{%   if helpers.exists('PFWsense.dnscryptproxy.general.ipv6_servers') and PFWsense.dnscryptproxy.general.ipv6_servers == '1' %}
ipv6_servers = true
{%   else %}
ipv6_servers = false
{%   endif %}

{%   if helpers.exists('PFWsense.dnscryptproxy.general.dnscrypt_servers') and PFWsense.dnscryptproxy.general.dnscrypt_servers == '1' %}
dnscrypt_servers = true
{%   else %}
dnscrypt_servers = false
{%   endif %}

{%   if helpers.exists('PFWsense.dnscryptproxy.general.doh_servers') and PFWsense.dnscryptproxy.general.doh_servers == '1' %}
doh_servers = true
{%   else %}
doh_servers = false
{%   endif %}

{%   if helpers.exists('PFWsense.dnscryptproxy.general.require_dnssec') and PFWsense.dnscryptproxy.general.require_dnssec == '1' %}
require_dnssec = true
{%   else %}
require_dnssec = false
{%   endif %}

{%   if helpers.exists('PFWsense.dnscryptproxy.general.require_nolog') and PFWsense.dnscryptproxy.general.require_nolog == '1' %}
require_nolog = true
{%   else %}
require_nolog = false
{%   endif %}

{%   if helpers.exists('PFWsense.dnscryptproxy.general.require_nofilter') and PFWsense.dnscryptproxy.general.require_nofilter == '1' %}
require_nofilter = true
{%   else %}
require_nofilter = false
{%   endif %}

{%   if helpers.exists('PFWsense.dnscryptproxy.general.force_tcp') and PFWsense.dnscryptproxy.general.force_tcp == '1' %}
force_tcp = true
{%   else %}
force_tcp = false
{%   endif %}

{%   if helpers.exists('PFWsense.dnscryptproxy.general.proxy') and PFWsense.dnscryptproxy.general.proxy != '' %}
proxy = "socks5://{{ PFWsense.dnscryptproxy.general.proxy }}"
{%   endif %}

timeout = {{ PFWsense.dnscryptproxy.general.timeout }}
keepalive = {{ PFWsense.dnscryptproxy.general.keepalive }}

log_level = 2
log_file = '/var/log/dnscrypt-proxy/dnscrypt-proxy.log'
use_syslog = false

cert_refresh_delay = {{ PFWsense.dnscryptproxy.general.cert_refresh_delay }}

{%   if helpers.exists('PFWsense.dnscryptproxy.general.dnscrypt_ephemeral_keys') and PFWsense.dnscryptproxy.general.dnscrypt_ephemeral_keys == '1' %}
dnscrypt_ephemeral_keys = true
{%   else %}
dnscrypt_ephemeral_keys = false
{%   endif %}

{%   if helpers.exists('PFWsense.dnscryptproxy.general.tls_disable_session_tickets') and PFWsense.dnscryptproxy.general.tls_disable_session_tickets == '1' %}
tls_disable_session_tickets = true
{%   else %}
tls_disable_session_tickets = false
{%   endif %}

fallback_resolver = '{{ PFWsense.dnscryptproxy.general.fallback_resolver }}'

{%   if helpers.exists('PFWsense.dnscryptproxy.general.ignore_system_dns') and PFWsense.dnscryptproxy.general.ignore_system_dns == '1' %}
ignore_system_dns = true
{%   else %}
ignore_system_dns = false
{%   endif %}

netprobe_timeout = 30
log_files_max_size = 10
log_files_max_age = 7
log_files_max_backups = 1

{%   if helpers.exists('PFWsense.dnscryptproxy.general.block_ipv6') and PFWsense.dnscryptproxy.general.block_ipv6 == '1' %}
block_ipv6 = true
{%   else %}
block_ipv6 = false
{%   endif %}

forwarding_rules = 'forwarding-rules.txt'
cloaking_rules = 'cloaking-rules.txt'

{%   if helpers.exists('PFWsense.dnscryptproxy.general.cache') and PFWsense.dnscryptproxy.general.cache == '1' %}
cache = true
cache_size = {{ PFWsense.dnscryptproxy.general.cache_size }}
cache_min_ttl = {{ PFWsense.dnscryptproxy.general.cache_min_ttl }}
cache_max_ttl = {{ PFWsense.dnscryptproxy.general.cache_max_ttl }}
cache_neg_min_ttl = {{ PFWsense.dnscryptproxy.general.cache_neg_min_ttl }}
cache_neg_max_ttl = {{ PFWsense.dnscryptproxy.general.cache_neg_max_ttl }}
{%   else %}
cache = false
{%   endif %}

{%   if helpers.exists('PFWsense.dnscryptproxy.general.query_logs') and PFWsense.dnscryptproxy.general.query_logs == '1' %}
[query_log]
  file = '/var/log/dnscrypt-proxy/query.log'
  format = 'tsv'

[nx_log]
  file = '/var/log/dnscrypt-proxy/nx.log'
  format = 'tsv'
{%   endif %}

[allowed_names]
  allowed_names_file = 'whitelist.txt'
  log_file = '/var/log/dnscrypt-proxy/whitelisted.log'
  log_format = 'tsv'

{% if helpers.exists('PFWsense.dnscryptproxy.dnsbl.enabled') and PFWsense.dnscryptproxy.dnsbl.enabled == '1' %}
[blocked_names]
  blocked_names_file = 'blacklist.txt'
  log_file = '/var/log/dnscrypt-proxy/blocked.log'
  log_format = 'tsv'
{% endif %}

[sources]
  [sources.'public-resolvers']
  urls = ['https://raw.githubusercontent.com/DNSCrypt/dnscrypt-resolvers/master/v3/public-resolvers.md', 'https://download.dnscrypt.info/resolvers-list/v3/public-resolvers.md']
  cache_file = 'public-resolvers.md'
  minisign_key = 'RWQf6LRCGA9i53mlYecO4IzT51TGPpvWucNSCh1CBM0QTaLn73Y7GFO3'
  refresh_delay = 72
  prefix = ''

  ## Anonymized DNS relays

  [sources.'relays']
  urls = ['https://raw.githubusercontent.com/DNSCrypt/dnscrypt-resolvers/master/v3/relays.md', 'https://download.dnscrypt.info/resolvers-list/v3/relays.md', 'https://ipv6.download.dnscrypt.info/resolvers-list/v3/relays.md', 'https://download.dnscrypt.net/resolvers-list/v3/relays.md']
  cache_file = 'relays.md'
  minisign_key = 'RWQf6LRCGA9i53mlYecO4IzT51TGPpvWucNSCh1CBM0QTaLn73Y7GFO3'
  refresh_delay = 72
  prefix = ''

[anonymized_dns]

{% if helpers.exists('PFWsense.dnscryptproxy.general.relaylist') and PFWsense.dnscryptproxy.general.relaylist != '' %}
 routes = [
    { server_name='*', via=[{{ "'" + ("','".join(PFWsense.dnscryptproxy.general.relaylist.split(','))) + "'" }}] }
 ]
{% endif %}


[static]
{% if helpers.exists('PFWsense.dnscryptproxy.server.servers.server') %}
{%   for server_list in helpers.toList('PFWsense.dnscryptproxy.server.servers.server') %}
{%     if server_list.enabled == '1' %}
  [static.'{{server_list.name}}']
  stamp = 'sdns://{{server_list.stamp}}'
{%     endif %}
{%   endfor %}
{% endif %}

{% endif %}
